generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model app_users {
  id       Int      @id(map: "users_pkey") @default(autoincrement())
  username String   @unique(map: "usernameUnique") @db.VarChar(255)
  password String   @db.VarChar(255)
  email    String   @unique(map: "emailUnique") @db.VarChar(255)
  roles    RoleEnum @default(user)
  isActive Boolean? @default(false)
}

model app_dummy_person {
  id                Int                @id(map: "Person_pkey") @default(autoincrement())
  name              String?
  address           String?
  countryId         Int?
  app_dummy_country app_dummy_country? @relation(fields: [countryId], references: [id], onDelete: Cascade, map: "country")
}

model app_dummy_country {
  id               Int                @id(map: "Country_pkey") @default(autoincrement())
  country          String?
  app_dummy_person app_dummy_person[]
}

model hotspots {
  id      BigInt  @id @default(autoincrement())
  name    String? @db.VarChar(32)
  mac     String? @db.VarChar(32)
  geocode String? @db.VarChar(128)
}

model nas {
  id          Int     @id @default(autoincrement())
  nasname     String
  shortname   String
  type        String  @default("other")
  ports       Int?
  secret      String
  server      String?
  community   String?
  description String?

  @@index([nasname], map: "nas_nasname")
}

model operators {
  id       BigInt  @id @default(autoincrement())
  username String? @db.VarChar(32)
  password String? @db.VarChar(32)
}

model radacct {
  radacctid          BigInt    @id @default(autoincrement())
  acctsessionid      String
  acctuniqueid       String    @unique
  username           String?
  realm              String?
  nasipaddress       String    @db.Inet
  nasportid          String?
  nasporttype        String?
  acctstarttime      DateTime? @db.Timestamptz(6)
  acctupdatetime     DateTime? @db.Timestamptz(6)
  acctstoptime       DateTime? @db.Timestamptz(6)
  acctinterval       BigInt?
  acctsessiontime    BigInt?
  acctauthentic      String?
  connectinfo_start  String?
  connectinfo_stop   String?
  acctinputoctets    BigInt?
  acctoutputoctets   BigInt?
  calledstationid    String?
  callingstationid   String?
  acctterminatecause String?
  servicetype        String?
  framedprotocol     String?
  framedipaddress    String?   @db.Inet

  @@index([acctstarttime, username], map: "radacct_start_user_idx")
}

model radcheck {
  id              Int                       @id @default(autoincrement())
  username        String                    @unique(map: "unique")
  attribute       String                    @default("Cleartext-Password")
  op              String                    @default(":=") @db.VarChar(2)
  value           String                    @default("")
  expirydate      DateTime?                 @db.Timestamp(0)
  email           String?                   @db.VarChar(255)
  address         String?                   @db.VarChar(255)
  first_name      String?                   @db.VarChar(255)
  last_name       String?                   @db.VarChar(255)
  phone           String?                   @db.VarChar(255)
  services_id     String?                   @db.VarChar(32)
  service_status  service_status_type_enum?
  radusergroup_id Int?
  latitude_       Float?                    @map("latitude ") @db.Real
  longitude       Float?                    @db.Real
  radusergroup    radusergroup?             @relation(fields: [radusergroup_id], references: [id], onDelete: Cascade, map: "radusegroup_fk")
  app_service     app_service?              @relation(fields: [services_id], references: [service_name], onDelete: Restrict, onUpdate: Restrict, map: "service_name_fk")
  app_transaction app_transaction[]

  @@index([username, attribute], map: "radcheck_username")
}

model radgroupcheck {
  id        Int    @id @default(autoincrement())
  groupname String @default("")
  attribute String @default("")
  op        String @default("==") @db.VarChar(2)
  value     String @default("")

  @@index([groupname, attribute], map: "radgroupcheck_groupname")
}

model radgroupreply {
  id          Int         @id @default(autoincrement())
  groupname   String      @default("")
  attribute   String      @default("")
  op          String      @default("=") @db.VarChar(2)
  value       String      @default("")
  app_service app_service @relation(fields: [groupname], references: [service_name], onDelete: Cascade, map: "groupname")

  @@index([groupname, attribute], map: "radgroupreply_groupname")
}

model radpostauth {
  id               BigInt   @id @default(autoincrement())
  username         String
  pass             String?
  reply            String?
  calledstationid  String?
  callingstationid String?
  authdate         DateTime @default(now()) @db.Timestamptz(6)
}

model radreply {
  id        Int    @id @default(autoincrement())
  username  String @default("")
  attribute String @default("")
  op        String @default("=") @db.VarChar(2)
  value     String @default("")

  @@index([username, attribute], map: "radreply_username")
}

model radusergroup {
  id        Int        @id @default(autoincrement())
  username  String     @default("")
  groupname String     @default("")
  priority  Int        @default(0)
  radcheck  radcheck[]

  @@index([username], map: "radusergroup_username")
}

model rates {
  id       BigInt  @id @default(autoincrement())
  type     String? @db.VarChar(32)
  cardbank Float?
  rate     Float?
}

model app_transaction {
  va_numbers         Json?     @db.Json
  transaction_time   DateTime? @db.Timestamp(0)
  transaction_status String?   @db.VarChar(255)
  transaction_id     String?   @db.VarChar(255)
  status_message     String?   @db.VarChar(255)
  status_code        String?   @db.VarChar(255)
  signature_key      String?   @db.VarChar(255)
  settlement_time    DateTime? @db.Timestamp(0)
  payment_type       String?   @db.VarChar(255)
  payment_amounts    Json?     @db.Json
  order_id           Int       @id @unique(map: "order_id_unique") @default(autoincrement())
  merchant_id        String?   @db.VarChar(255)
  gross_amount       String?   @db.VarChar(255)
  fraud_status       String?   @db.VarChar(255)
  currency           String?   @db.VarChar(255)
  radcheck_id        Int?
  radcheck           radcheck? @relation(fields: [radcheck_id], references: [id], onDelete: Cascade, map: "radcheck_id")
}

model app_service {
  service_name     String          @id @unique(map: "service_name_unique") @db.VarChar(255)
  service_ammount  String?         @db.VarChar(255)
  service_period   Int?
  installation_fee String?         @db.VarChar(255)
  radcheck         radcheck[]
  radgroupreply    radgroupreply[]
}

model app_message {
  id              Int     @id @default(autoincrement())
  message_name    String? @db.VarChar(255)
  message_content String? @db.VarChar(1500)
}

enum RoleEnum {
  superadmin
  admin
  user
  customer
  level1
  level2
  level3
  level4
}

enum service_status_type_enum {
  active
  suspend
  terimated
  registered
}
